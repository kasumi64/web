(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{529:function(n,a,v){"use strict";v.r(a);var t=v(1),r=Object(t.a)({},(function(){var n=this,a=n.$createElement,v=n._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[v("h1",{attrs:{id:"包管理工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#包管理工具"}},[n._v("#")]),n._v(" 包管理工具")]),n._v(" "),v("h2",{attrs:{id:"部分npm与yarn、pnpm命令对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部分npm与yarn、pnpm命令对比"}},[n._v("#")]),n._v(" 部分npm与yarn、pnpm命令对比")]),n._v(" "),v("table",[v("thead",[v("tr",[v("th",[n._v("Command")]),n._v(" "),v("th",[n._v("npm")]),n._v(" "),v("th",[n._v("yarn")]),n._v(" "),v("th",[n._v("pnpm")])])]),n._v(" "),v("tbody",[v("tr",[v("td",[n._v("初始化")]),n._v(" "),v("td",[n._v("npm init -y")]),n._v(" "),v("td",[n._v("yarn init -y")]),n._v(" "),v("td",[n._v("利用硬链接和符号链接来"),v("br"),n._v("避免复制所有本地缓存源文件")])]),n._v(" "),v("tr",[v("td",[n._v("安装依赖")]),n._v(" "),v("td",[n._v("npm/cnpm install")]),n._v(" "),v("td",[n._v("yarn install")]),n._v(" "),v("td",[n._v("pnpm install")])]),n._v(" "),v("tr",[v("td",[n._v("新增依赖")]),n._v(" "),v("td",[n._v("npm i axios")]),n._v(" "),v("td",[n._v("yarn add axios")]),n._v(" "),v("td",[n._v("pnpm i axios")])]),n._v(" "),v("tr",[v("td",[n._v("删除依赖")]),n._v(" "),v("td",[n._v("npm uninstall axios")]),n._v(" "),v("td",[n._v("yarn remove axios")]),n._v(" "),v("td",[n._v("pnpm uninstall axios")])]),n._v(" "),v("tr",[v("td",[n._v("更新依赖")]),n._v(" "),v("td",[n._v("npm update")]),n._v(" "),v("td",[n._v("yarn upgrade")]),n._v(" "),v("td",[n._v("pnpm update")])]),n._v(" "),v("tr",[v("td",[n._v("全局安装")]),n._v(" "),v("td",[n._v("npm i vue-cli -g")]),n._v(" "),v("td",[n._v("yarn global add  vue-cli")]),n._v(" "),v("td",[n._v("pnpm i vue-cli -g")])]),n._v(" "),v("tr",[v("td",[n._v("全局删除")]),n._v(" "),v("td",[n._v("npm uninstall vue-cli -g")]),n._v(" "),v("td",[n._v("yarn global remove vue-cli")]),n._v(" "),v("td",[n._v("pnpm uninstall vue-cli -g")])]),n._v(" "),v("tr",[v("td",[n._v("同下载多个")]),n._v(" "),v("td",[n._v("npm i axios vue")]),n._v(" "),v("td",[n._v("yarn add axios vue")]),n._v(" "),v("td",[n._v("pnpm i axios vue")])])])]),n._v(" "),v("h3",{attrs:{id:"设置淘宝镜像和重置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设置淘宝镜像和重置"}},[n._v("#")]),n._v(" 设置淘宝镜像和重置")]),n._v(" "),v("p",[n._v("npm config set registry https://registry.npm.taobao.org"),v("br"),n._v("\nnpm config set registry https://registry.npmjs.org")]),n._v(" "),v("h3",{attrs:{id:"修复"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修复"}},[n._v("#")]),n._v(" 修复")]),n._v(" "),v("p",[n._v("npm audit fix"),v("br"),n._v("\nnpm audit fix --force")]),n._v(" "),v("h2",{attrs:{id:"nrm、yrm-安装与配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#nrm、yrm-安装与配置"}},[n._v("#")]),n._v(" nrm、yrm 安装与配置")]),n._v(" "),v("ol",[v("li",[v("p",[n._v("nrm：")]),n._v(" "),v("ul",[v("li",[n._v("nrm(npm registry manager )是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换")]),n._v(" "),v("li",[v("strong",[n._v("nrm 与 yrm是完全一样的")])])])]),n._v(" "),v("li",[v("p",[n._v("安装nrm")])])]),n._v(" "),v("blockquote",[v("p",[n._v("在命令行执行命令，npm install -g nrm，全局安装nrm。")])]),n._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[n._v("执行命令nrm ls查看可选的源。")])]),n._v(" "),v("blockquote",[v("p",[n._v("nrm ls"),v("br"),n._v('\n* npm ---- "https://registry.npmjs.org/'),v("br"),n._v("\ncnpm --- http://r.cnpmjs.org/"),v("br"),n._v("\ntaobao - http://registry.npm.taobao.org/"),v("br"),n._v("\neu ----- http://registry.npmjs.eu/"),v("br"),n._v("\nau ----- http://registry.npmjs.org.au/"),v("br"),n._v("\nsl ----- http://npm.strongloop.com/"),v("br"),n._v("\nnj ----- https://registry.nodejitsu.com/"),v("br"),n._v("\n其中，带 * 的是当前使用的源，上面的输出表明当前源是官方源。")])]),n._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[n._v("切换")])]),n._v(" "),v("blockquote",[v("p",[n._v("如果要切换到taobao源，执行命令 nrm use taobao。")])]),n._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[n._v("增加"),v("br"),n._v("\n你可以增加定制的源，特别适用于添加企业内部的私有源。")])]),n._v(" "),v("blockquote",[v("p",[n._v("执行命令 nrm add [registry] [url]，其中reigstry为源名，url为源的路径。"),v("br"),n._v("\nnrm add registry http://registry.npm.frp.trmap.cn/")])]),n._v(" "),v("ol",{attrs:{start:"6"}},[v("li",[n._v("删除")])]),n._v(" "),v("blockquote",[v("p",[n._v("执行命令nrm del [registry]删除对应的源。")])]),n._v(" "),v("ol",{attrs:{start:"7"}},[v("li",[n._v("测试速度"),v("br"),n._v("\n你还可以通过 nrm test 测试相应源的响应时间。")])]),n._v(" "),v("blockquote",[v("p",[n._v("nrm test npm")])]),n._v(" "),v("h2",{attrs:{id:"npm常用命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#npm常用命令"}},[n._v("#")]),n._v(" NPM常用命令")]),n._v(" "),v("p",[n._v("1、npm install express：安装Node模块"),v("br"),n._v("\n  安装完毕后会产生一个node_modules目录，其目录下就是安装的各个node模块。")]),n._v(" "),v("p",[n._v("2、npm view express：查看node模块的package.json文件夹"),v("br"),n._v("\n  注意事项：如果想要查看package.json文件夹下某个标签的内容。")]),n._v(" "),v("p",[n._v("3、npm list：查看当前目录下已安装的node包"),v("br"),n._v("\n  注意事项：Node模块搜索是从代码执行的当前目录开始的，搜索结果取决于当前使用的目录中的node_modules下的内容。")]),n._v(" "),v("p",[n._v("4、npm help：查看帮助命令"),v("br"),n._v("\n5、npm view moudleName dependencies：查看包的依赖关系"),v("br"),n._v("\n6、npm view moduleName repository.url：查看包的源文件地址"),v("br"),n._v("\n7、npm view moduleName engines：查看包所依赖的Node的版本"),v("br"),n._v("\n8、npm help folders：查看npm使用的所有文件夹"),v("br"),n._v("\n9、npm rebuild moduleName：用于更改包内容后进行重建"),v("br"),n._v("\n10、npm outdated：检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新"),v("br"),n._v("\n11、npm update moduleName：更新node模块"),v("br"),n._v("\n12、npm uninstall moudleName：卸载node模块")]),n._v(" "),v("p",[n._v("13、一个npm包是包含了package.json的文件夹，package.json描述了这个文件夹的结构。"),v("br"),n._v("\n  访问npm的json文件夹的方法如下：npm help json"),v("br"),n._v("\n  此命令会以默认的方式打开一个网页，如果更改了默认打开程序则可能不会以网页的形式打开。")]),n._v(" "),v("p",[n._v("14、发布一个npm包的时候，需要检验某个包名是否已存在 npm search packageName"),v("br"),n._v("\n15、npm init：会引导你创建一个package.json文件，包括名称、版本、作者这些信息等"),v("br"),n._v("\n16、npm root：查看当前包的安装路径"),v("br"),n._v("\n  npm root -g：查看全局的包的安装路径"),v("br"),n._v("\n17、npm -v：查看npm安装的版本\n18、npm install --verbose cross-env ，--verbose 显示下载进度")]),n._v(" "),v("h2",{attrs:{id:"yarn常用命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#yarn常用命令"}},[n._v("#")]),n._v(" yarn常用命令")]),n._v(" "),v("p",[v("a",{attrs:{href:"https://www.cnblogs.com/lililia/p/10482169.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("转载至幻空Drems"),v("OutboundLink")],1),v("br"),n._v("\nyarn安装 npm i yarn -g"),v("br"),n._v("\n查看版本 yarn -v")]),n._v(" "),v("ol",[v("li",[n._v("开始一个新工程")])]),n._v(" "),v("ul",[v("li",[n._v("yarn init 与 npm init 一样通过交互式会话创建一个 package.json")]),n._v(" "),v("li",[n._v("yarn init # yarn")]),n._v(" "),v("li",[n._v("npm init # npm")]),n._v(" "),v("li",[n._v("跳过会话，直接通过默认值生成 package.json")]),n._v(" "),v("li",[n._v("yarn init --yes # 简写 -y")]),n._v(" "),v("li",[n._v("npm init -y")])]),n._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[n._v("添加一个依赖"),v("br"),n._v("\n通过 yarn add 添加依赖会更新 package.json 以及 yarn.lock 文件")])]),n._v(" "),v("p",[n._v("1).生产环境")]),n._v(" "),v("ul",[v("li",[n._v("yarn add [packageName] 依赖会记录在 package.json 的 dependencies 下 生产环境")]),n._v(" "),v("li",[n._v("yarn add webpack@2.3.3 # yarn --save 是 yarn 默认的，默认记录在 package.json 中")]),n._v(" "),v("li",[n._v("npm install webpack@2.3.3 --save # npm")])]),n._v(" "),v("p",[n._v("2).开发环境")]),n._v(" "),v("ul",[v("li",[n._v("yarn add [packageName] --dev 依赖会记录在 package.json 的 devDependencies 下 开发环境")]),n._v(" "),v("li",[n._v("yarn add webpack --dev # yarn 简写 -D")]),n._v(" "),v("li",[n._v("npm install webpack --save-dev # npm")])]),n._v(" "),v("p",[n._v("3).全局")]),n._v(" "),v("ul",[v("li",[n._v("yarn global add [packageName] 全局安装依赖")]),n._v(" "),v("li",[n._v("yarn global add webpack # yarn")]),n._v(" "),v("li",[n._v("npm install webpack -g # npm")])]),n._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[n._v("更新一个依赖")])]),n._v(" "),v("ul",[v("li",[n._v("yarn upgrade 用于更新包到基于规范范围的最新版本")]),n._v(" "),v("li",[n._v("yarn upgrade # 升级所有依赖项，不记录在 package.json 中")]),n._v(" "),v("li",[n._v("npm update # npm 可以通过 ‘--save|--save-dev’ 指定升级哪类依赖")]),n._v(" "),v("li",[n._v("yarn upgrade webpack # 升级指定包")]),n._v(" "),v("li",[n._v("npm update webpack --save-dev # npm")]),n._v(" "),v("li",[n._v("yarn upgrade --latest # 忽略版本规则，升级到最新版本，并且更新 package.json")])]),n._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[n._v("移除一个依赖")])]),n._v(" "),v("ul",[v("li",[n._v("yarn remove [packageName]")]),n._v(" "),v("li",[n._v("yarn remove webpack # yarn")]),n._v(" "),v("li",[n._v("npm uninstall webpack --save # npm 可以指定 --save | --save-dev")])]),n._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[n._v("安装 package.json 中的所有文件")])]),n._v(" "),v("ul",[v("li",[n._v("yarn 或者 yarn install")]),n._v(" "),v("li",[n._v("yarn install # 或者 yarn 在 node_modules 目录安装 package.json 中列出的所有依赖")]),n._v(" "),v("li",[n._v("npm install # npm")]),n._v(" "),v("li",[n._v("yarn install 安装时，如果 node_modules 中有相应的包则不会重新下载 --force 可以强制重新下载安装")]),n._v(" "),v("li",[n._v("yarn install --force # 强制下载安装")]),n._v(" "),v("li",[n._v("npm install --force # npm")])]),n._v(" "),v("ol",{attrs:{start:"6"}},[v("li",[n._v("运行脚本")])]),n._v(" "),v("ul",[v("li",[n._v("yarn run 用来执行在 package.json 中 scripts 属性下定义的脚本")])]),n._v(" "),v("div",{staticClass:"language-json line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-json"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// package.json")]),n._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[n._v('"scripts"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\t"),v("span",{pre:!0,attrs:{class:"token property"}},[n._v('"dev"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[n._v('"node app.js"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n\t"),v("span",{pre:!0,attrs:{class:"token property"}},[n._v('"start"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[n._v('"node app.js"')]),n._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[n._v("1")]),v("br"),v("span",{staticClass:"line-number"},[n._v("2")]),v("br"),v("span",{staticClass:"line-number"},[n._v("3")]),v("br"),v("span",{staticClass:"line-number"},[n._v("4")]),v("br"),v("span",{staticClass:"line-number"},[n._v("5")]),v("br")])]),v("ul",[v("li",[n._v("yarn run dev # yarn 执行 dev 对应的脚本 node app.js")]),n._v(" "),v("li",[n._v("npm run # npm")]),n._v(" "),v("li",[n._v("yarn start # yarn")]),n._v(" "),v("li",[n._v("npm start # npm")]),n._v(" "),v("li",[n._v("与 npm 一样 可以有 yarn start 和 yarn test 两个简写的运行脚本方式")])]),n._v(" "),v("ol",[v("li",[n._v("显示某个包信息")])]),n._v(" "),v("ul",[v("li",[n._v("yarn info [packageName] 可以用来查看某个模块的最新版本信息")]),n._v(" "),v("li",[n._v("yarn info webpack # yarn")]),n._v(" "),v("li",[n._v("npm info webpack # npm")]),n._v(" "),v("li",[n._v("yarn info webpack --json # 输出 json 格式")]),n._v(" "),v("li",[n._v("npm info webpack --json # npm")]),n._v(" "),v("li",[n._v("yarn info webpack readme # 输出 README 部分")]),n._v(" "),v("li",[n._v("npm info webpack readme")])]),n._v(" "),v("ol",{attrs:{start:"8"}},[v("li",[n._v("列出项目的所有依赖")])]),n._v(" "),v("ul",[v("li",[n._v("yarn list")]),n._v(" "),v("li",[n._v("yarn list # 列出当前项目的依赖")]),n._v(" "),v("li",[n._v("npm list # npm")]),n._v(" "),v("li",[n._v("yarn list --depth=0 # 限制依赖的深度")]),n._v(" "),v("li",[n._v("sudo yarn global list # 列出全局安装的模块")])]),n._v(" "),v("ol",{attrs:{start:"9"}},[v("li",[n._v("管理 yarn 配置文件")])]),n._v(" "),v("ul",[v("li",[n._v("yarn coinfig")]),n._v(" "),v("li",[n._v("yarn config set key value # 设置")]),n._v(" "),v("li",[n._v("npm config set key value")]),n._v(" "),v("li",[n._v("yarn config get key # 读取值")]),n._v(" "),v("li",[n._v("npm config get key")]),n._v(" "),v("li",[n._v("yarn config delete key # 删除")]),n._v(" "),v("li",[n._v("npm config delete key")]),n._v(" "),v("li",[n._v("yarn config list # 显示当前配置")]),n._v(" "),v("li",[n._v("npm config list")]),n._v(" "),v("li",[n._v("yarn config set registry https://registry.npm.taobao.org # 设置淘宝镜像")]),n._v(" "),v("li",[n._v("npm config set registry https://registry.npm.taobao.org # npm")])]),n._v(" "),v("ol",{attrs:{start:"10"}},[v("li",[n._v("缓存")])]),n._v(" "),v("ul",[v("li",[n._v("yarn cache")]),n._v(" "),v("li",[n._v("sudo yarn cache list # 列出已缓存的每个包")]),n._v(" "),v("li",[n._v("sudo yarn cache dir # 返回 全局缓存位置")]),n._v(" "),v("li",[n._v("sudo yarn cache clean # 清除缓存")])])])}),[],!1,null,null,null);a.default=r.exports}}]);